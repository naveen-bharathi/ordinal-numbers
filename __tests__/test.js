const getOrdinalNumber = require('../index');

const testCases = [[0, 'th'], [1, 'st'], [2, 'nd'], [3, 'rd'], [4, 'th'], [5, 'th'], [6, 'th'], [7, 'th'], [8, 'th'], [9, 'th'], [10, 'th'], [11, 'th'], [12, 'th'], [13, 'th'], [14, 'th'], [15, 'th'], [16, 'th'], [17, 'th'], [18, 'th'], [19, 'th'], [20, 'th'], [21, 'st'], [22, 'nd'], [23, 'rd'], [24, 'th'], [25, 'th'], [26, 'th'], [27, 'th'], [28, 'th'], [29, 'th'], [30, 'th'], [31, 'st'], [32, 'nd'], [33, 'rd'], [34, 'th'], [35, 'th'], [36, 'th'], [37, 'th'], [38, 'th'], [39, 'th'], [40, 'th'], [41, 'st'], [42, 'nd'], [43, 'rd'], [44, 'th'], [45, 'th'], [46, 'th'], [47, 'th'], [48, 'th'], [49, 'th'], [50, 'th'], [51, 'st'], [52, 'nd'], [53, 'rd'], [54, 'th'], [55, 'th'], [56, 'th'], [57, 'th'], [58, 'th'], [59, 'th'], [60, 'th'], [61, 'st'], [62, 'nd'], [63, 'rd'], [64, 'th'], [65, 'th'], [66, 'th'], [67, 'th'], [68, 'th'], [69, 'th'], [70, 'th'], [71, 'st'], [72, 'nd'], [73, 'rd'], [74, 'th'], [75, 'th'], [76, 'th'], [77, 'th'], [78, 'th'], [79, 'th'], [80, 'th'], [81, 'st'], [82, 'nd'], [83, 'rd'], [84, 'th'], [85, 'th'], [86, 'th'], [87, 'th'], [88, 'th'], [89, 'th'], [90, 'th'], [91, 'st'], [92, 'nd'], [93, 'rd'], [94, 'th'], [95, 'th'], [96, 'th'], [97, 'th'], [98, 'th'], [99, 'th'], [100, 'th'], [101, 'st'], [102, 'nd'], [103, 'rd'], [104, 'th'], [105, 'th'], [106, 'th'], [107, 'th'], [108, 'th'], [109, 'th'], [110, 'th'], [111, 'th'], [112, 'th'], [113, 'th'], [114, 'th'], [115, 'th'], [116, 'th'], [117, 'th'], [118, 'th'], [119, 'th'], [120, 'th'], [121, 'st'], [122, 'nd'], [123, 'rd'], [124, 'th'], [125, 'th'], [126, 'th'], [127, 'th'], [128, 'th'], [129, 'th'], [130, 'th'], [131, 'st'], [132, 'nd'], [133, 'rd'], [134, 'th'], [135, 'th'], [136, 'th'], [137, 'th'], [138, 'th'], [139, 'th'], [140, 'th'], [141, 'st'], [142, 'nd'], [143, 'rd'], [144, 'th'], [145, 'th'], [146, 'th'], [147, 'th'], [148, 'th'], [149, 'th'], [150, 'th'], [151, 'st'], [152, 'nd'], [153, 'rd'], [154, 'th'], [155, 'th'], [156, 'th'], [157, 'th'], [158, 'th'], [159, 'th'], [160, 'th'], [161, 'st'], [162, 'nd'], [163, 'rd'], [164, 'th'], [165, 'th'], [166, 'th'], [167, 'th'], [168, 'th'], [169, 'th'], [170, 'th'], [171, 'st'], [172, 'nd'], [173, 'rd'], [174, 'th'], [175, 'th'], [176, 'th'], [177, 'th'], [178, 'th'], [179, 'th'], [180, 'th'], [181, 'st'], [182, 'nd'], [183, 'rd'], [184, 'th'], [185, 'th'], [186, 'th'], [187, 'th'], [188, 'th'], [189, 'th'], [190, 'th'], [191, 'st'], [192, 'nd'], [193, 'rd'], [194, 'th'], [195, 'th'], [196, 'th'], [197, 'th'], [198, 'th'], [199, 'th']];

test('Should return an error if the passed parameter is not an object', async () => {
  expect(testCases.every((testCase) => (getOrdinalNumber(testCase[0]) === testCase[1]))).toBe(true);
});
